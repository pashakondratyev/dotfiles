call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'LaTeX-Box-Team/LaTeX-Box'
Plug 'morhetz/gruvbox'
Plug 'Valloric/YouCompleteMe'
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'mikewest/vimroom'
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/goyo.vim'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'Chiel92/vim-autoformat'
" OCAML Plugins
Plug 'vim-syntastic/syntastic'
call plug#end()

filetype on

" TODO 
" Language Specific
" Comment
" Check if all plugins necessary

if has('syntax') && (&t_Co > 2)
  syntax on
endif
set encoding=utf-8
" eliminates delay on ESC
" set timeoutlen=1000 
"set ttimeoutlen=10
set timeoutlen=10 ttimeoutlen=0

" number:           Numbers on side of screen
" ruler:            Displays line and char number 
set number
set ruler
set listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:·
set list
" autoread:         Reloads file when changed from outside
set autoread

"""""""""""""""""""
" Searching
"
" ignorecase:       Ignore case when searching
" smartcase:        When searching try to be smart about cases 
" hlsearch:         Highlight search results n(next) N(previous)
" incsearch:        Search incrementaly
" Space to turn off highlighting and clear any message already displayed.
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

set ignorecase
set smartcase
set hlsearch
set incsearch 

"""""""""""""""""""
" Tabbing 
"
" autoindent:       Autoindent on new lines
" tabstop:          Width of tab character
" shiftwidth        Determines the amount of whitespace to add in normal
" expandtab:        When on uses space instead of tabs"
filetype plugin indent on
set autoindent
set tabstop=2
set shiftwidth=2
set backspace=2
set expandtab

" If a line has more than 100 characters, highlights excess
" Should make this language specific (Get Langauage specific vimrc)
match ErrorMsg '\%>150v.\+'

"""""""""""""""""""
" Plugins
"
 
let g:ycm_global_ycm_extra_conf = '$HOME/.vim/.ycm_extra_conf.py'

" Color Schemes 
let g:gruvbox_termcolors="256"

if has('macunix')
  let g:gruvbox_contrast_dark="medium"
else
  let g:gruvbox_contrast_dark="soft"
endif 

set background=dark
"set termguicolors
colorscheme gruvbox

" Syntastic Config 
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}q
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_quiet_messages = { "regex": [
        \ '\mpossible unwanted space at "{"'
        \ ] }

" NerdTree
" Opens Nerd Tree with Control + N
map <C-n> :NERDTreeToggle<CR>

" Airline
let g:airline_powerline_fonts = 1

" SQL Formater
noremap <F3> :Autoformat<CR>
let g:formatdef_sql = '"sqlformat --reindent --keywords upper - identifiers lower -"'
let g:formatters_sql = ['sql']

" Install Vim Plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

